on:
  workflow_call:

name: CI

env:
  RUST_BACKTRACE: 1

jobs:
  test-zig-rust-wasm:
    name: test zig, rust, wasm...
    runs-on: [self-hosted, i7-6700K]
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4

      - name: Check for duplicate AUTHORS
        run: diff <(sort AUTHORS) <(sort AUTHORS | uniq) # The < operator treats a string as a file. diff 'succeeds' if no difference.

      - name: Update PATH to use zig 13
        run: |
          echo "PATH=/home/big-ci-user/Downloads/zig-linux-x86_64-0.13.0:$PATH" >> $GITHUB_ENV

      - run: zig version

      - name: zig fmt check, zig tests
        run: cd crates/compiler/builtins/bitcode && ./run-tests.sh

      - name: roc format check on builtins
        run: cargo run --locked --release format --check crates/compiler/builtins/roc

      - name: ensure there are no unused dependencies
        run: cargo +nightly-2024-02-03 udeps --all-targets

      - name: zig wasm tests
        run: cd crates/compiler/builtins/bitcode && ./run-wasm-tests.sh

      - name: regular rust tests
        # see #5904 for skipped test
        run: cargo test --locked --release -- --skip cli_tests::expects_dev_and_test

      - name: tests examples in docs
        run: cargo test --doc --release

      - name: test the dev backend # these tests require an explicit feature flag
        run: cargo test --locked --release --package test_gen --no-default-features --features gen-dev

      - name: test gen-wasm single threaded # gen-wasm has some multithreading problems to do with the wasmer runtime
        run: cargo test --locked --release --package test_gen --no-default-features --features gen-wasm -- --test-threads=1

      - name: roc test all builtins
        run: ./ci/roc_test_builtins.sh

      - name: wasm repl test
        run: crates/repl_test/test_wasm.sh

      - name: test building wasm repl
        run: ./ci/www-repl.sh

      #TODO i386 (32-bit linux) cli tests
      #TODO verify-no-git-changes

      - name: test website build script
        run: bash www/build.sh

      - name: run fuzz tests - ok to merge if this one fails # for now!
        run: |
          cargo +nightly-2024-02-03 install --locked cargo-fuzz
          cd crates/compiler/test_syntax/fuzz && cargo +nightly-2024-02-03 fuzz run -j4 fuzz_expr --sanitizer=none -- -dict=dict.txt -max_total_time=60
