[alias]
test-gen-llvm = "test -p test_gen"
test-gen-dev = "test -p roc_gen_dev -p test_gen --no-default-features --features gen-dev"
test-gen-wasm = "test -p roc_gen_wasm -p test_gen --no-default-features --features gen-wasm"

[target.wasm32-unknown-unknown]
# Rust compiler flags for minimum-sized .wasm binary in the web REPL
# opt-level=s   Optimizations should focus more on size than speed
# lto=fat       Spend extra effort on link-time optimization across crates
rustflags = ["-Copt-level=s", "-Clto=fat"]

[target.'cfg(not(target = "wasm32-unknown-unknown"))']
# Sets the avx, avx2, sse2 and sse4.2 target-features correctly based on your CPU.
rustflags = ["-Ctarget-cpu=native"]

[env]
# Gives us the path of the workspace root for use in cargo tests without having
# to compute it per-package.
# https://github.com/rust-lang/cargo/issues/3946#issuecomment-973132993
ROC_WORKSPACE_DIR = { value = "", relative = true }

# Debug flags. Keep this up-to-date with compiler/debug_flags/src/lib.rs.
# Set = "1" to turn a debug flag on.
ROC_PRETTY_PRINT_ALIAS_CONTENTS     = "0"
ROC_PRINT_UNIFICATIONS              = "0"
ROC_PRINT_UNIFICATIONS_DERIVED      = "0"
ROC_PRINT_MISMATCHES                = "0"
ROC_VERIFY_RIGID_LET_GENERALIZED    = "0"
ROC_PRINT_IR_AFTER_SPECIALIZATION   = "0"
ROC_PRINT_IR_AFTER_RESET_REUSE      = "0"
ROC_PRINT_IR_AFTER_REFCOUNT         = "0"
ROC_DEBUG_ALIAS_ANALYSIS            = "0"
ROC_PRINT_LLVM_FN_VERIFICATION      = "0"
ROC_PRINT_LOAD_LOG                  = "0"
