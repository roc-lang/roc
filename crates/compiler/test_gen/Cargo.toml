[package]
name = "test_gen"
description = "Contains all of Roc's code generation tests."

authors.workspace = true
edition.workspace = true
license.workspace = true
version.workspace = true

[[test]]
name = "test_gen"
path = "src/tests.rs"

[build-dependencies]
roc_bitcode = { path = "../builtins/bitcode" }
roc_command_utils = { path = "../../utils/command" }
wasi_libc_sys = { path = "../../wasi-libc-sys" }

tempfile.workspace = true

[dependencies]
roc_gen_llvm = { path = "../gen_llvm", optional = true }
inkwell = { workspace = true, optional = true }

[dev-dependencies]
roc_gen_dev = { path = "../gen_dev" }
roc_gen_wasm = { path = "../gen_wasm" }
roc_bitcode = { path = "../builtins/bitcode" }
roc_build = { path = "../build", features = ["target-aarch64", "target-x86_64", "target-wasm32"] }
roc_builtins = { path = "../builtins" }
roc_can = { path = "../can" }
roc_collections = { path = "../collections" }
roc_command_utils = { path = "../../utils/command" }
roc_constrain = { path = "../constrain" }
roc_debug_flags = { path = "../debug_flags" }
roc_error_macros = { path = "../../error_macros" }
roc_load = { path = "../load" }
roc_module = { path = "../module" }
roc_mono = { path = "../mono" }
roc_packaging = { path = "../../packaging" }
roc_parse = { path = "../parse" }
roc_problem = { path = "../problem" }
roc_region = { path = "../region" }
roc_reporting = { path = "../../reporting" }
roc_solve = { path = "../solve" }
roc_std = { path = "../../roc_std" }
roc_target = { path = "../roc_target" }
roc_test_utils = { path = "../../test_utils"}
roc_types = { path = "../types" }
roc_unify = { path = "../unify" }
roc_wasm_interp = { path = "../../wasm_interp" }
roc_wasm_module = { path = "../../wasm_module" }

bumpalo.workspace = true
criterion.workspace = true
indoc.workspace = true
libc.workspace = true
libloading.workspace = true
target-lexicon.workspace = true
tempfile.workspace = true


[features]
default = ["gen-llvm"]
gen-dev = []
gen-llvm = ["roc_gen_llvm", "inkwell"]
gen-llvm-wasm = ["gen-llvm"]
gen-wasm = []

[[bench]]
name = "list_map"
harness = false

[[bench]]
name = "quicksort"
harness = false

[package.metadata.cargo-udeps.ignore]
development = ["roc_wasm_interp"]
