[package]
name = "test_gen"
description = "Contains all of Roc's code generation tests."

authors.workspace = true
edition.workspace = true
license.workspace = true
version.workspace = true

[[test]]
name = "test_gen"
path = "src/tests.rs"

[build-dependencies]
roc_bitcode.workspace = true
roc_command_utils.workspace = true
wasi_libc_sys.workspace = true

tempfile.workspace = true

[dependencies]
roc_gen_llvm = { workspace = true, optional = true }
inkwell = { workspace = true, optional = true }

[dev-dependencies]
roc_gen_dev.workspace = true
roc_gen_wasm.workspace = true
roc_bitcode.workspace = true
roc_build = { workspace = true, features = [
    "target-aarch64",
    "target-x86_64",
    "target-wasm32",
] }
roc_builtins.workspace = true
roc_can.workspace = true
roc_collections.workspace = true
roc_command_utils.workspace = true
roc_constrain.workspace = true
roc_debug_flags.workspace = true
roc_error_macros.workspace = true
roc_load.workspace = true
roc_module.workspace = true
roc_mono.workspace = true
roc_packaging.workspace = true
roc_parse.workspace = true
roc_problem.workspace = true
roc_region.workspace = true
roc_reporting.workspace = true
roc_solve.workspace = true
roc_std.workspace = true
roc_target.workspace = true
roc_test_utils.workspace = true
roc_types.workspace = true
roc_unify.workspace = true
roc_wasm_interp.workspace = true
roc_wasm_module.workspace = true

bumpalo.workspace = true
criterion.workspace = true
indoc.workspace = true
libc.workspace = true
libloading.workspace = true
target-lexicon.workspace = true
tempfile.workspace = true


[features]
default = ["gen-llvm"]
gen-dev = []
gen-llvm = ["roc_gen_llvm", "inkwell"]
gen-llvm-wasm = ["gen-llvm"]
gen-wasm = []

[[bench]]
name = "list_map"
harness = false

[[bench]]
name = "quicksort"
harness = false

[package.metadata.cargo-udeps.ignore]
development = ["roc_wasm_interp"]
