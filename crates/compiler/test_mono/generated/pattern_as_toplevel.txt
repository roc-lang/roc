procedure Bool.1 ():
    let Bool.24 : Int1 = false;
    ret Bool.24;

procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.23 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.23;

procedure Test.1 ():
    let Test.8 : I64 = 42i64;
    let Test.9 : Str = "foo";
    let Test.7 : {I64, Str} = Struct {Test.8, Test.9};
    ret Test.7;

procedure Test.0 ():
    let Test.4 : {I64, Str} = CallByName Test.1;
    let Test.11 : I64 = StructAtIndex 0 Test.4;
    let Test.12 : I64 = 42i64;
    let Test.13 : Int1 = lowlevel Eq Test.12 Test.11;
    if Test.13 then
        let Test.6 : {I64, Str} = CallByName Test.1;
        let Test.5 : Int1 = CallByName Bool.11 Test.6 Test.4;
        dec Test.6;
        let #Derived_gen.0 : Str = StructAtIndex 1 Test.4;
        dec #Derived_gen.0;
        ret Test.5;
    else
        let #Derived_gen.1 : Str = StructAtIndex 1 Test.4;
        dec #Derived_gen.1;
        let Test.10 : Int1 = CallByName Bool.1;
        ret Test.10;
