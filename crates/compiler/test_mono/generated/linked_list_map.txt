procedure Num.19 (#Attr.2, #Attr.3):
    let Num.283 : I64 = lowlevel NumAdd #Attr.2 #Attr.3;
    ret Num.283;

procedure Test.10 (Test.11):
    let Test.28 : I64 = 1i64;
    let Test.27 : I64 = CallByName Num.19 Test.11 Test.28;
    ret Test.27;

procedure Test.2 (Bool.21, Bool.22):
    let Bool.24 : [<rnu><null>, C I64 *self] = NullPointer;
    let Bool.23 : Ptr([<rnu><null>, C I64 *self]) = Alloca Bool.24;
    joinpoint Bool.25 Test.4 Test.5 Bool.26 Bool.27:
        let Test.22 : U8 = 1i64;
        let Test.23 : U8 = GetTagId Test.5;
        let Test.24 : Int1 = lowlevel Eq Test.22 Test.23;
        if Test.24 then
            let Test.18 : [<rnu><null>, C I64 *self] = TagId(1) ;
            let Bool.29 : {} = lowlevel PtrStore Bool.26 Test.18;
            let Bool.28 : [<rnu><null>, C I64 *self] = lowlevel PtrLoad Bool.27;
            ret Bool.28;
        else
            let Test.7 : I64 = UnionAtIndex (Id 0) (Index 0) Test.5;
            let Test.8 : [<rnu><null>, C I64 *self] = UnionAtIndex (Id 0) (Index 1) Test.5;
            joinpoint Bool.33 Bool.35:
                let Test.20 : I64 = CallByName Test.10 Test.7;
                let Bool.30 : [<rnu><null>, C I64 *self] = NullPointer;
                let Test.19 : [<rnu><null>, C I64 *self] = Reuse Bool.35 UpdateModeId { id: 1 } TagId(0) Test.20 Bool.30;
                let Bool.31 : Ptr([<rnu><null>, C I64 *self]) = GetElementPointer (Indices [0, 1]) Test.19;
                let Bool.32 : {} = lowlevel PtrStore Bool.26 Test.19;
                jump Bool.25 Test.4 Test.8 Bool.31 Bool.27;
            in
            let Bool.34 : Int1 = lowlevel RefCountIsUnique Test.5;
            if Bool.34 then
                jump Bool.33 Test.5;
            else
                inc Test.8;
                decref Test.5;
                let Bool.36 : [<rnu><null>, C I64 *self] = NullPointer;
                jump Bool.33 Bool.36;
    in
    jump Bool.25 Bool.21 Bool.22 Bool.23 Bool.23;

procedure Test.0 ():
    let Test.15 : {} = Struct {};
    let Test.25 : I64 = 42i64;
    let Test.26 : [<rnu><null>, C I64 *self] = TagId(1) ;
    let Test.16 : [<rnu><null>, C I64 *self] = TagId(0) Test.25 Test.26;
    let Test.14 : [<rnu><null>, C I64 *self] = CallByName Test.2 Test.15 Test.16;
    ret Test.14;
