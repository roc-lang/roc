procedure Num.19 (#Attr.2, #Attr.3):
    let Num.291 : I64 = lowlevel NumAdd #Attr.2 #Attr.3;
    ret Num.291;

procedure Test.1 (Test.8):
    let Test.3 : I64 = 10i64;
    ret Test.3;

procedure Test.2 ():
    let Test.13 : {} = Struct {};
    let Test.12 : I64 = CallByName Test.1 Test.13;
    ret Test.12;

procedure Test.4 (Test.5, Test.3):
    let Test.18 : {} = Struct {};
    joinpoint Test.19 Test.17:
        let Test.16 : I64 = CallByName Num.19 Test.17 Test.3;
        ret Test.16;
    in
    switch Test.5:
        case 0:
            let Test.20 : I64 = CallByName Test.6 Test.18;
            jump Test.19 Test.20;
    
        default:
            let Test.20 : I64 = CallByName Test.7 Test.18;
            jump Test.19 Test.20;
    

procedure Test.6 (Test.21):
    let Test.24 : Int1 = true;
    let Test.23 : I64 = CallByName Test.2;
    let Test.22 : I64 = CallByName Test.4 Test.24 Test.23;
    ret Test.22;

procedure Test.7 (Test.25):
    let Test.26 : I64 = 10i64;
    ret Test.26;

procedure Test.0 ():
    let Test.11 : Int1 = false;
    let Test.10 : I64 = CallByName Test.2;
    let Test.9 : I64 = CallByName Test.4 Test.11 Test.10;
    ret Test.9;
