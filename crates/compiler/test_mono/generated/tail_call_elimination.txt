procedure Num.19 (#Attr.2, #Attr.3):
    let Num.291 : I64 = lowlevel NumAdd #Attr.2 #Attr.3;
    ret Num.291;

procedure Num.20 (#Attr.2, #Attr.3):
    let Num.292 : I64 = lowlevel NumSub #Attr.2 #Attr.3;
    ret Num.292;

procedure Test.1 (#Derived_gen.0, #Derived_gen.1):
    joinpoint Test.7 Test.2 Test.3:
        let Test.13 : I64 = 0i64;
        let Test.14 : Int1 = lowlevel Eq Test.13 Test.2;
        if Test.14 then
            ret Test.3;
        else
            let Test.12 : I64 = 1i64;
            let Test.10 : I64 = CallByName Num.20 Test.2 Test.12;
            let Test.11 : I64 = CallByName Num.19 Test.2 Test.3;
            jump Test.7 Test.10 Test.11;
    in
    jump Test.7 #Derived_gen.0 #Derived_gen.1;

procedure Test.0 ():
    let Test.5 : I64 = 1000000i64;
    let Test.6 : I64 = 0i64;
    let Test.4 : I64 = CallByName Test.1 Test.5 Test.6;
    ret Test.4;
