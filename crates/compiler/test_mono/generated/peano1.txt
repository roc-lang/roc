procedure Test.0 ():
    let Test.15 : [<rnu><null>, C *self] = TagId(1) ;
    let Test.14 : [<rnu><null>, C *self] = TagId(0) Test.15;
    let Test.13 : [<rnu><null>, C *self] = TagId(0) Test.14;
    let Test.2 : [<rnu><null>, C *self] = TagId(0) Test.13;
    let Test.10 : U8 = 1i64;
    let Test.11 : U8 = GetTagId Test.2;
    joinpoint Bool.21:
        let Test.12 : Int1 = lowlevel Eq Test.10 Test.11;
        if Test.12 then
            let Test.8 : I64 = 0i64;
            ret Test.8;
        else
            let Test.9 : I64 = 1i64;
            ret Test.9;
    in
    let Bool.22 : Int1 = lowlevel RefCountIsUnique Test.2;
    if Bool.22 then
        dec Test.13;
        free Test.2;
        jump Bool.21;
    else
        decref Test.2;
        jump Bool.21;
