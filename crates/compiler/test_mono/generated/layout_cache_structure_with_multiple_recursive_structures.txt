procedure List.102 (Bool.21, Bool.22, Bool.23, Bool.24, Bool.25):
    joinpoint List.686 List.176 List.177 List.178 List.179 List.180:
        let List.688 : Int1 = CallByName Num.22 List.179 List.180;
        if List.688 then
            let List.692 : [<rnu>C *self, <null>] = CallByName List.66 List.176 List.179;
            inc List.692;
            let List.181 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = CallByName Test.7 List.177 List.692;
            let List.691 : U64 = 1i64;
            let List.690 : U64 = CallByName Num.51 List.179 List.691;
            jump List.686 List.176 List.181 List.178 List.690 List.180;
        else
            dec List.176;
            ret List.177;
    in
    inc Bool.21;
    jump List.686 Bool.21 Bool.22 Bool.23 Bool.24 Bool.25;

procedure List.18 (List.173, List.174, List.175):
    let List.684 : U64 = 0i64;
    let List.685 : U64 = CallByName List.6 List.173;
    let List.683 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = CallByName List.102 List.173 List.174 List.175 List.684 List.685;
    ret List.683;

procedure List.6 (#Attr.2):
    let List.694 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.694;

procedure List.66 (#Attr.2, #Attr.3):
    let List.693 : [<rnu>C *self, <null>] = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.693;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.290 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.290;

procedure Num.51 (#Attr.2, #Attr.3):
    let Num.289 : U64 = lowlevel NumAddWrap #Attr.2 #Attr.3;
    ret Num.289;

procedure Test.7 (Test.11, Test.12):
    let Test.17 : {[<rnu>C *self, <null>], [<rnu><null>, C {[<rnu>C *self, <null>], *self}]} = Struct {Test.12, Test.11};
    let Test.16 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = TagId(0) Test.17;
    ret Test.16;

procedure Test.0 ():
    let Test.6 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = TagId(1) ;
    let Test.8 : List [<rnu>C *self, <null>] = Array [];
    let Test.15 : {} = Struct {};
    let Test.9 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = CallByName List.18 Test.8 Test.6 Test.15;
    dec Test.8;
    ret Test.9;
