procedure List.104 (Bool.21, Bool.22, Bool.23, Bool.24, Bool.25):
    joinpoint List.705 List.179 List.180 List.181 List.182 List.183:
        let List.707 : Int1 = CallByName Num.22 List.182 List.183;
        if List.707 then
            let List.711 : [<rnu>C *self, <null>] = CallByName List.66 List.179 List.182;
            inc List.711;
            let List.184 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = CallByName Test.7 List.180 List.711;
            let List.710 : U64 = 1i64;
            let List.709 : U64 = CallByName Num.51 List.182 List.710;
            jump List.705 List.179 List.184 List.181 List.709 List.183;
        else
            dec List.179;
            ret List.180;
    in
    inc Bool.21;
    jump List.705 Bool.21 Bool.22 Bool.23 Bool.24 Bool.25;

procedure List.18 (List.176, List.177, List.178):
    let List.703 : U64 = 0i64;
    let List.704 : U64 = CallByName List.6 List.176;
    let List.702 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = CallByName List.104 List.176 List.177 List.178 List.703 List.704;
    ret List.702;

procedure List.6 (#Attr.2):
    let List.713 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.713;

procedure List.66 (#Attr.2, #Attr.3):
    let List.712 : [<rnu>C *self, <null>] = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.712;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.290 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.290;

procedure Num.51 (#Attr.2, #Attr.3):
    let Num.289 : U64 = lowlevel NumAddWrap #Attr.2 #Attr.3;
    ret Num.289;

procedure Test.7 (Test.11, Test.12):
    let Test.17 : {[<rnu>C *self, <null>], [<rnu><null>, C {[<rnu>C *self, <null>], *self}]} = Struct {Test.12, Test.11};
    let Test.16 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = TagId(0) Test.17;
    ret Test.16;

procedure Test.0 ():
    let Test.6 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = TagId(1) ;
    let Test.8 : List [<rnu>C *self, <null>] = Array [];
    let Test.15 : {} = Struct {};
    let Test.9 : [<rnu><null>, C {[<rnu>C *self, <null>], *self}] = CallByName List.18 Test.8 Test.6 Test.15;
    dec Test.8;
    ret Test.9;
