procedure Bool.2 ():
    let Bool.21 : Int1 = true;
    ret Bool.21;

procedure Bool.9 (#Attr.2, #Attr.3):
    let Bool.22 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.22;

procedure List.2 (List.120, List.121):
    let List.689 : U64 = CallByName List.6 List.120;
    let List.685 : Int1 = CallByName Num.22 List.121 List.689;
    if List.685 then
        let List.687 : I64 = CallByName List.66 List.120 List.121;
        let List.686 : [C {}, C I64] = TagId(1) List.687;
        ret List.686;
    else
        let List.684 : {} = Struct {};
        let List.683 : [C {}, C I64] = TagId(0) List.684;
        ret List.683;

procedure List.6 (#Attr.2):
    let List.690 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.690;

procedure List.66 (#Attr.2, #Attr.3):
    let List.688 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.688;

procedure List.9 (List.392):
    let List.682 : U64 = 0i64;
    let List.675 : [C {}, C I64] = CallByName List.2 List.392 List.682;
    let List.679 : U8 = 1i64;
    let List.680 : U8 = GetTagId List.675;
    let List.681 : Int1 = lowlevel Eq List.679 List.680;
    if List.681 then
        let List.393 : I64 = UnionAtIndex (Id 1) (Index 0) List.675;
        let List.676 : [C Int1, C I64] = TagId(1) List.393;
        ret List.676;
    else
        let List.678 : Int1 = true;
        let List.677 : [C Int1, C I64] = TagId(0) List.678;
        ret List.677;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.283 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.283;

procedure Str.27 (Str.185):
    let Str.385 : [C Int1, C I64] = CallByName Str.74 Str.185;
    ret Str.385;

procedure Str.42 (#Attr.2):
    let Str.393 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.393;

procedure Str.74 (Str.292):
    let Str.293 : {I64, U8} = CallByName Str.42 Str.292;
    let Str.391 : U8 = StructAtIndex 1 Str.293;
    let Str.392 : U8 = 0i64;
    let Str.388 : Int1 = CallByName Bool.9 Str.391 Str.392;
    if Str.388 then
        let Str.390 : I64 = StructAtIndex 0 Str.293;
        let Str.389 : [C Int1, C I64] = TagId(1) Str.390;
        ret Str.389;
    else
        let Str.387 : Int1 = false;
        let Str.386 : [C Int1, C I64] = TagId(0) Str.387;
        ret Str.386;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        dec Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        dec Test.2;
        ret Test.1;
