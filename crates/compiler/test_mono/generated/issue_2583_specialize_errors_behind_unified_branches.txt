procedure Bool.2 ():
    let Bool.11 : Int1 = true;
    ret Bool.11;

procedure Bool.7 (#Attr.2, #Attr.3):
    let Bool.12 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.12;

procedure List.2 (List.90, List.91):
    let List.395 : U64 = CallByName List.6 List.90;
    let List.391 : Int1 = CallByName Num.22 List.91 List.395;
    if List.391 then
        let List.393 : I64 = CallByName List.66 List.90 List.91;
        let List.392 : [C {}, C I64] = TagId(1) List.393;
        ret List.392;
    else
        let List.390 : {} = Struct {};
        let List.389 : [C {}, C I64] = TagId(0) List.390;
        ret List.389;

procedure List.6 (#Attr.2):
    let List.396 : U64 = lowlevel ListLen #Attr.2;
    ret List.396;

procedure List.66 (#Attr.2, #Attr.3):
    let List.394 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.394;

procedure List.9 (List.214):
    let List.388 : U64 = 0i64;
    let List.381 : [C {}, C I64] = CallByName List.2 List.214 List.388;
    let List.385 : U8 = 1i64;
    let List.386 : U8 = GetTagId List.381;
    let List.387 : Int1 = lowlevel Eq List.385 List.386;
    if List.387 then
        let List.215 : I64 = UnionAtIndex (Id 1) (Index 0) List.381;
        let List.382 : [C Int1, C I64] = TagId(1) List.215;
        ret List.382;
    else
        let List.384 : Int1 = true;
        let List.383 : [C Int1, C I64] = TagId(0) List.384;
        ret List.383;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.257 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.257;

procedure Str.27 (Str.93):
    let Str.251 : [C Int1, C I64] = CallByName Str.66 Str.93;
    ret Str.251;

procedure Str.47 (#Attr.2):
    let Str.259 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.259;

procedure Str.66 (Str.222):
    let Str.223 : {I64, U8} = CallByName Str.47 Str.222;
    let Str.257 : U8 = StructAtIndex 1 Str.223;
    let Str.258 : U8 = 0i64;
    let Str.254 : Int1 = CallByName Bool.7 Str.257 Str.258;
    if Str.254 then
        let Str.256 : I64 = StructAtIndex 0 Str.223;
        let Str.255 : [C Int1, C I64] = TagId(1) Str.256;
        ret Str.255;
    else
        let Str.253 : Int1 = false;
        let Str.252 : [C Int1, C I64] = TagId(0) Str.253;
        ret Str.252;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        dec Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        dec Test.2;
        ret Test.1;
