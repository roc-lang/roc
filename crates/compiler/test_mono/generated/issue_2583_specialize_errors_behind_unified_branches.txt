procedure Bool.2 ():
    let Bool.21 : Int1 = true;
    ret Bool.21;

procedure Bool.9 (#Attr.2, #Attr.3):
    let Bool.22 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.22;

procedure List.2 (List.121, List.122):
    let List.697 : U64 = CallByName List.6 List.121;
    let List.693 : Int1 = CallByName Num.22 List.122 List.697;
    if List.693 then
        let List.695 : I64 = CallByName List.66 List.121 List.122;
        let List.694 : [C {}, C I64] = TagId(1) List.695;
        ret List.694;
    else
        let List.692 : {} = Struct {};
        let List.691 : [C {}, C I64] = TagId(0) List.692;
        ret List.691;

procedure List.6 (#Attr.2):
    let List.698 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.698;

procedure List.66 (#Attr.2, #Attr.3):
    let List.696 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.696;

procedure List.9 (List.393):
    let List.690 : U64 = 0i64;
    let List.683 : [C {}, C I64] = CallByName List.2 List.393 List.690;
    let List.687 : U8 = 1i64;
    let List.688 : U8 = GetTagId List.683;
    let List.689 : Int1 = lowlevel Eq List.687 List.688;
    if List.689 then
        let List.394 : I64 = UnionAtIndex (Id 1) (Index 0) List.683;
        let List.684 : [C Int1, C I64] = TagId(1) List.394;
        ret List.684;
    else
        let List.686 : Int1 = true;
        let List.685 : [C Int1, C I64] = TagId(0) List.686;
        ret List.685;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.289 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.289;

procedure Str.27 (Str.187):
    let Str.388 : [C Int1, C I64] = CallByName Str.75 Str.187;
    ret Str.388;

procedure Str.42 (#Attr.2):
    let Str.396 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.396;

procedure Str.75 (Str.294):
    let Str.295 : {I64, U8} = CallByName Str.42 Str.294;
    let Str.394 : U8 = StructAtIndex 1 Str.295;
    let Str.395 : U8 = 0i64;
    let Str.391 : Int1 = CallByName Bool.9 Str.394 Str.395;
    if Str.391 then
        let Str.393 : I64 = StructAtIndex 0 Str.295;
        let Str.392 : [C Int1, C I64] = TagId(1) Str.393;
        ret Str.392;
    else
        let Str.390 : Int1 = false;
        let Str.389 : [C Int1, C I64] = TagId(0) Str.390;
        ret Str.389;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        dec Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        dec Test.2;
        ret Test.1;
