---
source: crates/compiler/can/tests/test_suffixed.rs
expression: snapshot
snapshot_kind: text
---
Defs {
    tags: [
        EitherIndex(2147483648),
    ],
    regions: [
        @0-51,
    ],
    space_before: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
    ],
    space_after: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 1 },
    ],
    spaces: [
        Newline,
    ],
    type_defs: [],
    value_defs: [
        Body(
            @0-4 Identifier {
                ident: "main",
            },
            @11-51 Defs(
                Defs {
                    tags: [
                        EitherIndex(2147483648),
                    ],
                    regions: [
                        @11-40,
                    ],
                    space_before: [
                        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                    ],
                    space_after: [
                        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                    ],
                    spaces: [],
                    type_defs: [],
                    value_defs: [
                        Body(
                            @11-40 Identifier {
                                ident: "1",
                            },
                            @11-40 Apply(
                                @31-38 Var {
                                    module_name: "Num",
                                    ident: "add",
                                },
                                [
                                    @11-23 Defs(
                                        Defs {
                                            tags: [
                                                EitherIndex(2147483648),
                                            ],
                                            regions: [
                                                @11-12,
                                            ],
                                            space_before: [
                                                Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                                            ],
                                            space_after: [
                                                Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                                            ],
                                            spaces: [],
                                            type_defs: [],
                                            value_defs: [
                                                Body(
                                                    @11-12 Identifier {
                                                        ident: "0",
                                                    },
                                                    @11-12 Num(
                                                        "1",
                                                    ),
                                                ),
                                            ],
                                        },
                                        @11-23 LowLevelDbg(
                                            (
                                                "test.roc:2",
                                                " ",
                                            ),
                                            @11-12 Apply(
                                                @11-12 Var {
                                                    module_name: "Inspect",
                                                    ident: "toStr",
                                                },
                                                [
                                                    @11-12 Var {
                                                        module_name: "",
                                                        ident: "0",
                                                    },
                                                ],
                                                Space,
                                            ),
                                            @11-12 Var {
                                                module_name: "",
                                                ident: "0",
                                            },
                                        ),
                                    ),
                                    @39-40 Num(
                                        "2",
                                    ),
                                ],
                                BinOp(
                                    Pizza,
                                ),
                            ),
                        ),
                    ],
                },
                @11-51 LowLevelDbg(
                    (
                        "test.roc:2",
                        "  main =\n                1\n  ",
                    ),
                    @11-40 Apply(
                        @11-40 Var {
                            module_name: "Inspect",
                            ident: "toStr",
                        },
                        [
                            @11-40 Var {
                                module_name: "",
                                ident: "1",
                            },
                        ],
                        Space,
                    ),
                    @11-40 Var {
                        module_name: "",
                        ident: "1",
                    },
                ),
            ),
        ),
    ],
}
