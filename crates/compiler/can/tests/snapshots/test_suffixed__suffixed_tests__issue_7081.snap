---
source: crates/compiler/can/tests/test_suffixed.rs
expression: snapshot
snapshot_kind: text
---
Defs {
    tags: [
        EitherIndex(2147483648),
        EitherIndex(2147483649),
        EitherIndex(2147483650),
    ],
    regions: [
        @0-80,
        @82-227,
        @229-266,
    ],
    space_before: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 2 },
        Slice<roc_parse::ast::CommentOrNewline> { start: 2, length: 2 },
    ],
    space_after: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
        Slice<roc_parse::ast::CommentOrNewline> { start: 2, length: 0 },
        Slice<roc_parse::ast::CommentOrNewline> { start: 4, length: 1 },
    ],
    spaces: [
        Newline,
        Newline,
        Newline,
        Newline,
        Newline,
    ],
    type_defs: [],
    value_defs: [
        Body(
            @0-3 Identifier {
                ident: "inc",
            },
            @6-80 Closure(
                [
                    @7-8 Identifier {
                        ident: "i",
                    },
                ],
                @16-80 If {
                    if_thens: [
                        (
                            @19-24 Apply(
                                @21-22 Var {
                                    module_name: "Num",
                                    ident: "isGt",
                                },
                                [
                                    @19-20 Var {
                                        module_name: "",
                                        ident: "i",
                                    },
                                    @23-24 Num(
                                        "2",
                                    ),
                                ],
                                BinOp(
                                    GreaterThan,
                                ),
                            ),
                            @38-52 Apply(
                                @38-41 Tag(
                                    "Err",
                                ),
                                [
                                    @42-52 Tag(
                                        "MaxReached",
                                    ),
                                ],
                                Space,
                            ),
                        ),
                    ],
                    final_else: @70-80 Apply(
                        @70-72 Tag(
                            "Ok",
                        ),
                        [
                            @74-79 ParensAround(
                                Apply(
                                    @76-77 Var {
                                        module_name: "Num",
                                        ident: "add",
                                    },
                                    [
                                        @74-75 Var {
                                            module_name: "",
                                            ident: "i",
                                        },
                                        @78-79 Num(
                                            "1",
                                        ),
                                    ],
                                    BinOp(
                                        Plus,
                                    ),
                                ),
                            ),
                        ],
                        Space,
                    ),
                    indented_else: false,
                },
            ),
        ),
        Expect {
            condition: @93-227 Defs(
                Defs {
                    tags: [
                        EitherIndex(2147483648),
                        EitherIndex(2147483649),
                    ],
                    regions: [
                        @99-189,
                        @203-208,
                    ],
                    space_before: [
                        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 1 },
                    ],
                    space_after: [
                        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                        Slice<roc_parse::ast::CommentOrNewline> { start: 1, length: 0 },
                    ],
                    spaces: [
                        Newline,
                    ],
                    type_defs: [],
                    value_defs: [
                        Body(
                            @93-96 Identifier {
                                ident: "run",
                            },
                            @99-189 Closure(
                                [
                                    @100-101 Identifier {
                                        ident: "i",
                                    },
                                ],
                                @113-189 Defs(
                                    Defs {
                                        tags: [
                                            EitherIndex(2147483648),
                                        ],
                                        regions: [
                                            @132-172,
                                        ],
                                        space_before: [
                                            Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                                        ],
                                        space_after: [
                                            Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                                        ],
                                        spaces: [],
                                        type_defs: [],
                                        value_defs: [
                                            Body(
                                                @113-117 Identifier {
                                                    ident: "newi",
                                                },
                                                @132-172 LowLevelTry(
                                                    @132-172 Apply(
                                                        @169-172 Var {
                                                            module_name: "",
                                                            ident: "inc",
                                                        },
                                                        [
                                                            @132-152 LowLevelTry(
                                                                @132-152 Apply(
                                                                    @149-152 Var {
                                                                        module_name: "",
                                                                        ident: "inc",
                                                                    },
                                                                    [
                                                                        @132-133 Var {
                                                                            module_name: "",
                                                                            ident: "i",
                                                                        },
                                                                    ],
                                                                    Try,
                                                                ),
                                                                OperatorSuffix,
                                                            ),
                                                        ],
                                                        Try,
                                                    ),
                                                    OperatorSuffix,
                                                ),
                                            ),
                                        ],
                                    },
                                    @182-189 Apply(
                                        @182-184 Tag(
                                            "Ok",
                                        ),
                                        [
                                            @185-189 Var {
                                                module_name: "",
                                                ident: "newi",
                                            },
                                        ],
                                        Space,
                                    ),
                                ),
                            ),
                        ),
                        Body(
                            @194-200 Identifier {
                                ident: "result",
                            },
                            @203-208 Apply(
                                @203-206 Var {
                                    module_name: "",
                                    ident: "run",
                                },
                                [
                                    @207-208 Num(
                                        "0",
                                    ),
                                ],
                                Space,
                            ),
                        ),
                    ],
                },
                @213-227 Apply(
                    @220-222 Var {
                        module_name: "Bool",
                        ident: "isEq",
                    },
                    [
                        @213-219 Var {
                            module_name: "",
                            ident: "result",
                        },
                        @223-227 Apply(
                            @223-225 Tag(
                                "Ok",
                            ),
                            [
                                @226-227 Num(
                                    "2",
                                ),
                            ],
                            Space,
                        ),
                    ],
                    BinOp(
                        Equals,
                    ),
                ),
            ),
            preceding_comment: @82-82,
        },
        Body(
            @229-233 Identifier {
                ident: "main",
            },
            @240-266 Apply(
                @240-266 Var {
                    module_name: "Stdout",
                    ident: "line",
                },
                [
                    @253-266 Str(
                        PlainLine(
                            "Hello world",
                        ),
                    ),
                ],
                Space,
            ),
        ),
    ],
}
