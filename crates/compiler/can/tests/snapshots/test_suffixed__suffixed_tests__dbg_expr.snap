---
source: crates/compiler/can/tests/test_suffixed.rs
expression: snapshot
snapshot_kind: text
---
Defs {
    tags: [
        EitherIndex(2147483648),
    ],
    regions: [
        @0-28,
    ],
    space_before: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
    ],
    space_after: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 1 },
    ],
    spaces: [
        Newline,
    ],
    type_defs: [],
    value_defs: [
        Body(
            @0-4 Identifier {
                ident: "main",
            },
            @11-28 Defs(
                Defs {
                    tags: [
                        EitherIndex(2147483648),
                    ],
                    regions: [
                        @16-27,
                    ],
                    space_before: [
                        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                    ],
                    space_after: [
                        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                    ],
                    spaces: [],
                    type_defs: [],
                    value_defs: [
                        Body(
                            @16-27 Identifier {
                                ident: "1",
                            },
                            @16-27 ParensAround(
                                Defs(
                                    Defs {
                                        tags: [
                                            EitherIndex(2147483648),
                                        ],
                                        regions: [
                                            @21-26,
                                        ],
                                        space_before: [
                                            Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                                        ],
                                        space_after: [
                                            Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
                                        ],
                                        spaces: [],
                                        type_defs: [],
                                        value_defs: [
                                            Body(
                                                @21-26 Identifier {
                                                    ident: "0",
                                                },
                                                @21-26 ParensAround(
                                                    Apply(
                                                        @23-24 Var {
                                                            module_name: "Num",
                                                            ident: "add",
                                                        },
                                                        [
                                                            @21-22 Num(
                                                                "1",
                                                            ),
                                                            @25-26 Num(
                                                                "1",
                                                            ),
                                                        ],
                                                        BinOp(
                                                            Plus,
                                                        ),
                                                    ),
                                                ),
                                            ),
                                        ],
                                    },
                                    @16-27 LowLevelDbg(
                                        (
                                            "test.roc:3",
                                            "     ",
                                        ),
                                        @21-26 Apply(
                                            @21-26 Var {
                                                module_name: "Inspect",
                                                ident: "toStr",
                                            },
                                            [
                                                @21-26 Var {
                                                    module_name: "",
                                                    ident: "0",
                                                },
                                            ],
                                            Space,
                                        ),
                                        @21-26 Var {
                                            module_name: "",
                                            ident: "0",
                                        },
                                    ),
                                ),
                            ),
                        ),
                    ],
                },
                @11-28 LowLevelDbg(
                    (
                        "test.roc:2",
                        "n =\n       ",
                    ),
                    @16-27 Apply(
                        @16-27 Var {
                            module_name: "Inspect",
                            ident: "toStr",
                        },
                        [
                            @16-27 Var {
                                module_name: "",
                                ident: "1",
                            },
                        ],
                        Space,
                    ),
                    @16-27 Var {
                        module_name: "",
                        ident: "1",
                    },
                ),
            ),
        ),
    ],
}
