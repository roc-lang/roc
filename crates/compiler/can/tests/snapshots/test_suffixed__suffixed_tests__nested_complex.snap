---
source: crates/compiler/can/tests/test_suffixed.rs
expression: snapshot
snapshot_kind: text
---
Defs {
    tags: [
        EitherIndex(2147483648),
    ],
    regions: [
        @0-61,
    ],
    space_before: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
    ],
    space_after: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 1 },
    ],
    spaces: [
        Newline,
    ],
    type_defs: [],
    value_defs: [
        Body(
            @0-4 Identifier {
                ident: "main",
            },
            @15-43 Apply(
                @15-43 Var {
                    module_name: "Task",
                    ident: "await",
                },
                [
                    Apply(
                        Var {
                            module_name: "",
                            ident: "bar",
                        },
                        [
                            @26-29 Var {
                                module_name: "",
                                ident: "baz",
                            },
                        ],
                        Space,
                    ),
                    @15-43 Closure(
                        [
                            Identifier {
                                ident: "#!0_arg",
                            },
                        ],
                        @15-43 Apply(
                            @15-43 Var {
                                module_name: "Task",
                                ident: "await",
                            },
                            [
                                @15-43 Apply(
                                    @15-43 Var {
                                        module_name: "",
                                        ident: "foo",
                                    },
                                    [
                                        @21-29 ParensAround(
                                            Var {
                                                module_name: "",
                                                ident: "#!0_arg",
                                            },
                                        ),
                                        @32-42 ParensAround(
                                            Apply(
                                                @32-36 Var {
                                                    module_name: "",
                                                    ident: "blah",
                                                },
                                                [
                                                    @37-42 Var {
                                                        module_name: "",
                                                        ident: "stuff",
                                                    },
                                                ],
                                                Space,
                                            ),
                                        ),
                                    ],
                                    Space,
                                ),
                                @15-43 Closure(
                                    [
                                        @11-12 Identifier {
                                            ident: "z",
                                        },
                                    ],
                                    @48-61 Apply(
                                        @48-59 Var {
                                            module_name: "",
                                            ident: "doSomething",
                                        },
                                        [
                                            @60-61 Var {
                                                module_name: "",
                                                ident: "z",
                                            },
                                        ],
                                        Space,
                                    ),
                                ),
                            ],
                            BangSuffix,
                        ),
                    ),
                ],
                BangSuffix,
            ),
        ),
    ],
}
