---
source: crates/compiler/can/tests/test_suffixed.rs
expression: snapshot
snapshot_kind: text
---
Defs {
    tags: [
        EitherIndex(2147483648),
    ],
    regions: [
        @0-154,
    ],
    space_before: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 0 },
    ],
    space_after: [
        Slice<roc_parse::ast::CommentOrNewline> { start: 0, length: 1 },
    ],
    spaces: [
        Newline,
    ],
    type_defs: [],
    value_defs: [
        Body(
            @0-4 Identifier {
                ident: "main",
            },
            @20-30 Apply(
                @20-30 Var {
                    module_name: "Task",
                    ident: "await",
                },
                [
                    @20-30 Var {
                        module_name: "Stdin",
                        ident: "line",
                    },
                    @20-30 Closure(
                        [
                            @11-17 Identifier {
                                ident: "result",
                            },
                        ],
                        @37-154 When(
                            @42-48 Var {
                                module_name: "",
                                ident: "result",
                            },
                            [
                                WhenBranch {
                                    patterns: [
                                        @60-63 Tag(
                                            "End",
                                        ),
                                    ],
                                    value: @79-89 Apply(
                                        @79-86 Var {
                                            module_name: "Task",
                                            ident: "ok",
                                        },
                                        [
                                            @87-89 Record(
                                                [],
                                            ),
                                        ],
                                        Space,
                                    ),
                                    guard: None,
                                },
                                WhenBranch {
                                    patterns: [
                                        @99-109 Apply(
                                            @99-104 Tag(
                                                "Input",
                                            ),
                                            [
                                                @105-109 Identifier {
                                                    ident: "name",
                                                },
                                            ],
                                        ),
                                    ],
                                    value: @125-154 Apply(
                                        @125-154 Var {
                                            module_name: "Stdout",
                                            ident: "line",
                                        },
                                        [
                                            @138-154 Str(
                                                Line(
                                                    [
                                                        Plaintext(
                                                            "Hello, ",
                                                        ),
                                                        Interpolated(
                                                            @148-152 Var {
                                                                module_name: "",
                                                                ident: "name",
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ),
                                        ],
                                        Space,
                                    ),
                                    guard: None,
                                },
                            ],
                        ),
                    ),
                ],
                BangSuffix,
            ),
        ),
    ],
}
