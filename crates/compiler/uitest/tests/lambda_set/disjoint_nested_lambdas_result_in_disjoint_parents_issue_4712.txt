# +opt infer:print_only_under_alias
# +emit:can_decls
app "test" provides [main] to "./platform"

Parser a : {} -> a

v1 : {}
v1 = {}

v2 : Str
v2 = ""

apply : Parser (a -> Str), a -> Parser Str
apply = \fnParser, valParser ->
    \{} ->
        (fnParser {}) (valParser)

map : a, (a -> Str) -> Parser Str
map = \simpleParser, transform ->
    apply (\{} -> transform) simpleParser

parseInput = \{} ->
    when [ map v1 (\{} -> ""), map v2 (\s -> s) ] is
    #    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ List (({} -[[9 (({} -[[12 (Str -[[14]]-> Str)]]-> (Str -[[14]]-> Str))) Str, 9 (({} -[[12 ({} -[[13]]-> Str)]]-> ({} -[[13]]-> Str))) {}]]-> Str))
        _ -> ""

main = parseInput {} == ""

# -emit:can_decls
v1 = {}

v2 = ""

apply = \fnParser, valParser -> \{} -[9]-> (fnParser {}) valParser

map = \simpleParser, transform -> apply \{} -[12]-> transform simpleParser

parseInput = \{} ->
  when [
      map v1 \{} -[13]-> "",
      map v2 \s -[14]-> s,
    ] is
    _ -> ""

main = Bool.is_eq (parseInput {}) ""