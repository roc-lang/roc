[package]
name = "roc_cli"
description = "The Roc binary that brings together all functionality in the Roc toolset."
default-run = "roc"
build = "build.rs"

authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true

[[bin]]
bench = false
name = "roc"
path = "src/main.rs"
test = false

[features]
default = ["target-aarch64", "target-x86_64", "target-wasm32"]

i386-cli-run = ["target-x86"]
wasm32-cli-run = ["target-wasm32", "run-wasm32"]

run-wasm32 = ["roc_wasm_interp"]

# Compiling for a different target than the current machine can cause linker errors.
target-aarch64 = ["roc_build/target-aarch64", "roc_repl_cli/target-aarch64"]
target-arm = ["roc_build/target-arm", "roc_repl_cli/target-arm"]
target-wasm32 = ["roc_build/target-wasm32"]
target-x86 = ["roc_build/target-x86", "roc_repl_cli/target-x86"]
target-x86_64 = ["roc_build/target-x86_64", "roc_repl_cli/target-x86_64"]

target-all = [
    "target-aarch64",
    "target-arm",
    "target-x86",
    "target-x86_64",
    "target-wasm32",
]

sanitizers = ["roc_build/sanitizers"]


[dependencies]
copy_zig_glue.workspace = true
roc_build.workspace = true
roc_builtins.workspace = true
roc_can.workspace = true
roc_collections.workspace = true
roc_docs.workspace = true
roc_error_macros.workspace = true
roc_fmt.workspace = true
roc_gen_llvm.workspace = true
roc_gen_dev.workspace = true
roc_glue.workspace = true
roc_linker.workspace = true
roc_load.workspace = true
roc_module.workspace = true
roc_mono.workspace = true
roc_packaging.workspace = true
roc_parse.workspace = true
roc_region.workspace = true
roc_reporting.workspace = true
roc_target.workspace = true
roc_tracing.workspace = true
roc_repl_cli = { workspace = true, optional = true }
roc_wasm_interp = { workspace = true, optional = true }

ven_pretty.workspace = true

bumpalo.workspace = true
clap.workspace = true
const_format.workspace = true
distance.workspace = true
errno.workspace = true
indoc.workspace = true
inkwell.workspace = true
libc.workspace = true
libloading.workspace = true
mimalloc.workspace = true
regex.workspace = true
signal-hook.workspace = true
strum.workspace = true
target-lexicon.workspace = true
tempfile.workspace = true

# for now, uses unix/libc functions that windows does not support
[target.'cfg(not(windows))'.dependencies]
roc_repl_expect.workspace = true


[dev-dependencies]
cli_test_utils.workspace = true
roc_command_utils.workspace = true

criterion.workspace = true
indoc.workspace = true
parking_lot.workspace = true
pretty_assertions.workspace = true
insta.workspace = true

[build-dependencies]
chrono.workspace = true

[[bench]]
name = "time_bench"
harness = false
