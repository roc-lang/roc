procedure List.7 (#Attr.2):
    let Test.7 : Builtin(Int(U64)) = lowlevel ListLen #Attr.2;
    ret Test.7;

procedure Test.1 (Test.5):
    let Test.11 : LambdaSet(LambdaSet { set: [(`#UserApp.choose`, [Builtin(Int(I64))])], representation: Struct([Builtin(Int(I64))]) }) = Struct {Test.2};
    let Test.10 : Builtin(List(LambdaSet(LambdaSet { set: [(`#UserApp.choose`, [Builtin(Int(I64))])], representation: Struct([Builtin(Int(I64))]) }))) = Array [Test.11];
    ret Test.10;

procedure Test.2 ():
    let Test.13 : Builtin(Int(I64)) = 41i64;
    ret Test.13;

procedure Test.3 (Test.9, #Attr.12):
    let Test.2 : Builtin(Int(I64)) = StructAtIndex 0 #Attr.12;
    let Test.2 : Builtin(Int(I64)) = CallByName Test.2;
    ret Test.2;

procedure Test.0 ():
    let Test.8 : Struct([]) = Struct {};
    let Test.4 : Builtin(List(LambdaSet(LambdaSet { set: [(`#UserApp.choose`, [Builtin(Int(I64))])], representation: Struct([Builtin(Int(I64))]) }))) = CallByName Test.1 Test.8;
    let Test.6 : Builtin(Int(U64)) = CallByName List.7 Test.4;
    dec Test.4;
    ret Test.6;
